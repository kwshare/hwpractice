# **7、靠谱的车**
# https://blog.csdn.net/private_object/article/details/118162476

'''
  **7、靠谱的车**
  程序员小明打了一辆出租车去上班。出于职业敏感，他注意到这辆出租车的计费表有点问题，总是偏大。
  出租车司机解释说他不喜欢数字4，所以改装了计费表，任何数字位置遇到数字4就直接跳过，其余功能都正常。
  比如：
  1.     23再多一块钱就变为25；
  2.     39再多一块钱变为50；
  3.     399再多一块钱变为500；
  小明识破了司机的伎俩，准备利用自己的学识打败司机的阴谋。
  给出计费表的表面读数，返回实际产生的费用
  输入描述:
  只有一行，数字N，表示里程表的读数。(1<=N<=888888888)。
  输出描述:
  一个数字，表示实际产生的费用。以回车结束。
  示例1：
  输入 5
  输出 4
  说明: 5表示计费表的表面读数。4表示实际产生的费用其实只有4块钱。
  示例2：
  输入 17
  输出 15
  说明 : 17表示计费表的表面读数。15表示实际产生的费用其实只有15块钱。
  示例3：
  输入 100
  输出 81
  说明: 100表示计费表的表面读数。81表示实际产生的费用其实只有81块钱。
'''

'''
先求4的个数。思路是先通过迭代求得10, 100, 1000, 10000....以内4的个数。分别为 1, 19, 271, 3439，...个

范围n	1~n范围内含4的个数计算过程 	    1~n范围内含4的集合	                                                    1~n范围内共多少个数	备注
10	            1	                        也即{4}	 	 
100	            1×9+10	                9个1~10范围内含4的数，也即{4,14,24,34,54,64,74,84,94}再加上{40~49}	        19个	 
1000	        19×9+100	            9个1~100范围内含4的数，再加上{400~499}集合内的100个数	                    271个	        如果用容斥定理，应该是C(3,1)*10^2 - C(3,2)*10^1+ C(3, 3)*10^0 = 300-30+1=271个。
10000	        271×9+1000	            9个1~1000范围内含4的数，再加上{4000~4999}集合内的1000个数	                3439个	 

'''



while True:
    try:
        s = int(input())
        c, temp, k, j = s, 0, 0, 1
        while s > 0:
            # 先判断个位上是否跳了4，如果个位上是5~9，就先temp=1
            if s % 10 > 4:
                temp += (s % 10 - 1) * k + j
            else:
                temp += (s % 10) * k
            k = k * 9 + j   # 每100个中有9个4，10的倍数中将会成倍的增加。k代表跳了多少次4，多收了多少个1元
            j *= 10     # 1 10 100 1000 10000 j代表位数，1代表个位，10代表十位
            s //= 10    # 万 千 百 十 个，相当于将s整体右移一位

        # for i in range(s + 1):
        #     if '4' in str(i):
        #         c += 1
        print(c - temp)
    except:
        break


# while True:
#     try:
#         s = int(input())
#         c = 0
#         for i in range(s+1):
#             if '4' in str(i):
#                 c += 1
#         print(s-c)
#     except:
#         break