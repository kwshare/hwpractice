# HJ69 矩阵乘法


# NB, 一次性通过。
# 注意点：输入矩阵的建立，行录入的时候还是要注意末尾空格，直接用input().split()分隔，就可以把空格去掉了，直接用map(int, )，不用单独去处理末尾空格。
# 如果用input().split(' '),则末尾的空格会被分隔成一个‘’字符，没法直接map(int,)

while True:
    try:
        x = int(input())
        y = int(input())
        z = int(input())
        A = []
        B = []
        for i in range(x):
            A.append(list(map(int, input().split())))
        for j in range(y):
            B.append(list(map(int, input().split())))
        # 输入录入后，开始计算，先初始化一个二维数组，初始值为0
        R = [[0 for k in range(z)] for i in range(x)]
        for i in range(x):
            for k in range(z):
                for j in range(y):  # 计算每个输出单元格的数据，A行与B列的乘积，长度为y
                    R[i][k] += A[i][j] * B[j][k]
        # 按行输出
        for i in range(x):
            for k in range(z):
                print(R[i][k], end=' ')
            print('')
    except:
        break

'''
中等  通过率：45.44%  时间限制：1秒  空间限制：32M
知识点
数组
warning 校招时部分企业笔试将禁止编程题跳出页面，为提前适应，练习时请使用在线自测，而非本地IDE。
描述
如果A是个x行y列的矩阵，B是个y行z列的矩阵，把A和B相乘，其结果将是另一个x行z列的矩阵C。这个矩阵的每个元素是由下面的公式决定的

矩阵的大小不超过100*100
输入描述：
第一行包含一个正整数x，代表第一个矩阵的行数
第二行包含一个正整数y，代表第一个矩阵的列数和第二个矩阵的行数
第三行包含一个正整数z，代表第二个矩阵的列数
之后x行，每行y个整数，代表第一个矩阵的值
之后y行，每行z个整数，代表第二个矩阵的值

输出描述：
对于每组输入数据，输出x行，每行z个整数，代表两个矩阵相乘的结果
示例1
输入：
2
3
2
1 2 3
3 2 1
1 2
2 1
3 3
复制
输出：
14 13
10 11
复制
说明：
1 2 3
3 2 1
乘以
1 2
2 1
3 3
等于
14 13
10 11
示例2
输入：
16
8
7
17 19 16 19 14 1 14 9
7 2 7 9 16 14 16 12
13 3 3 17 5 9 8 16
1 14 16 10 13 13 14 1
13 13 15 4 7 2 6 16
16 15 5 5 15 13 1 11
11 5 0 16 14 7 7 15
0 16 4 7 16 6 0 15
2 14 11 2 17 17 5 12
8 13 11 10 1 17 10 8
15 16 17 15 7 8 13 14
5 19 11 3 11 14 5 4
9 16 13 11 15 18 0 3
15 3 19 9 5 14 12 3
9 8 7 11 18 19 14 18
12 19 9 1 0 18 17 10
5 18 16 19 6 12 5
1 17 1 5 9 16 3
14 16 4 0 19 3 6
11 9 15 18 11 17 13
5 5 19 3 16 1 12
12 13 19 1 10 5 18
19 18 6 18 19 12 3
15 11 6 5 10 17 19
复制
输出：
1020 1490 1063 1100 1376 1219 884
966 1035 1015 715 1112 772 920
822 948 888 816 831 920 863
855 1099 828 578 1160 717 724
745 1076 644 595 930 838 688
635 1051 970 600 880 811 846
748 879 952 772 864 872 878
526 722 645 335 763 688 748
764 996 868 362 1026 681 897
836 1125 785 637 940 849 775
1082 1476 996 968 1301 1183 953
609 987 717 401 894 657 662
700 1083 1022 527 1016 746 875
909 1162 905 722 1055 708 720
1126 1296 1240 824 1304 1031 1196
905 1342 766 715 1028 956 749
'''